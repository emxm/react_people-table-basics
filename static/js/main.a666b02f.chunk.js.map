{"version":3,"sources":["components/PageNavLink.tsx","components/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","_ref","to","title","_jsx","NavLink","className","_ref2","isActive","classNames","children","Navigation","role","_jsxs","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","concat","slug","sex","name","PeopleTable","people","activeSlug","useParams","findParent","parentName","parent","find","map","born","died","motherName","fatherName","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","isError","setIsError","_useState5","_useState6","isLoading","setIsLoading","useEffect","peopleFromServer","catch","finally","_Fragment","length","HomePage","NotFoundPage","App","Routes","Route","path","index","element","Navigate","replace","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.a666b02f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <NavLink\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: activeSlug } = useParams();\n\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    return parent\n      ? <PersonLink person={parent} />\n      : parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex, born, died, motherName, fatherName, slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': slug === activeSlug },\n              )}\n              key={person.slug}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{findParent(motherName)}</td>\n              <td>{findParent(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => setPeople(peopleFromServer))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isError && !people.length && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}